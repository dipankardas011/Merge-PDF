name: Stable Docker Image Release

on:
  # schedule:
  #   # Monthly release at 12'o clock
  #   - cron: "0 12 1 * *"
  workflow_dispatch:

jobs:

  docker_new_release:

    runs-on: ubuntu-latest
    environment: deploy
    env:
      SUPER_SECRET: ${{ secrets.DOCKER_PASS }}
      BACKEND_MERGE: dipugodocker/pdf-editor:0.8-backend-merge
      BACKEND_DATABASE: dipugodocker/pdf-editor:0.8-backend-db
      BACKEND_ROTATE: dipugodocker/pdf-editor:0.8-backend-rotate
      FRONTEND: dipugodocker/pdf-editor:0.8-frontend
    steps:
    - uses: actions/checkout@v3
    - name: Publish the Docker image
      run: |
        docker login -u dipugodocker -p "$SUPER_SECRET"
        cd src/backend/merger
        docker build . --file Dockerfile --target prod --tag $BACKEND_MERGE
        cd ../../frontend
        docker build . --file Dockerfile --target prod --tag $FRONTEND
        docker push $FRONTEND
        docker push $BACKEND_MERGE

  Sign-cosign-pushed:
    needs: [docker_build]

    runs-on: ubuntu-latest
    environment: preview

    env:
      SUPER_SECRET: ${{ secrets.DOCKER_PASS }}
      BACKEND_MERGE: dipugodocker/pdf-editor:0.8-backend-merge
      BACKEND_DATABASE: dipugodocker/pdf-editor:0.8-backend-db
      BACKEND_ROTATE: dipugodocker/pdf-editor:0.8-backend-rotate
      FRONTEND: dipugodocker/pdf-editor:0.8-frontend

    name: Install Cosign and test presence in path
    steps:
      - uses: actions/checkout@v3


      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        # with:
        #   cosign-release: main
      - name: Check Version
        run: |
          cosign version
          docker login -u dipugodocker -p "$SUPER_SECRET"

      - name: build all üè≠ Images
        run: |
          chmod +x build.sh
          ./build.sh 0

      - name: push all
        run: |
          docker push $BACKEND_DATABASE
          docker push $BACKEND_MERGE
          docker push $BACKEND_ROTATE
          docker push $FRONTEND

      - name: sign
        run: |
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $FRONTEND
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_MERGE
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_ROTATE
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_DATABASE

      - name: verify
        run: |
          echo "Frontend Verify"
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $FRONTEND | jq .
          echo "Backend images Verify"
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_DATABASE | jq .
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_MERGE | jq .
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_ROTATE | jq .
