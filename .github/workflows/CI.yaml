name: Golang and Docker CI

on:
  push:
    paths:
    - 'src/**'
    - 'build.sh'
    branches: [ main ]

jobs:
  golang_build:

    runs-on: ubuntu-latest
    environment: testing

    steps:
    - uses: actions/checkout@v3
    - name: üß™ backend Merger
      run: |
        cd src/backend/merger
        docker build --target test -t xyz .
        docker run --rm xyz

    - name: üß™ backend Rotator
      run: |
        cd src/backend/rotator
        docker build --target test -t xyz .
        docker run --rm xyz

  npm_build:

    runs-on: ubuntu-latest
    environment: testing

    steps:
    - uses: actions/checkout@v3
    - name: üß™ frontend
      run: |
        cd src/frontend
        docker build --target test -t xyz .
        docker run --rm xyz

  docker_build:

    needs: [golang_build,npm_build]

    runs-on: ubuntu-latest
    environment: testing

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |
        cd src/backend/merger
        docker build . --target prod --file Dockerfile --tag pdf-editor:$(date +%s)
        cd ../rotator
        docker build . --target prod --file Dockerfile --tag pdf-editor:$(date +%s)
        cd ../../frontend
        docker build . --target prod --file Dockerfile --tag pdf-editor:$(date +%s)

  test_cosign_action:
    needs: [docker_build]

    runs-on: ubuntu-latest
    environment: preview

    env:
      SUPER_SECRET: ${{ secrets.DOCKER_PASS }}
      BACKEND_MERGE: dipugodocker/pdf-editor:backend-merge
      BACKEND_ROTATE: dipugodocker/pdf-editor:backend-rotate
      FRONTEND: dipugodocker/pdf-editor:frontend

    name: Install Cosign and test presence in path
    steps:
      - uses: actions/checkout@v3


      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        # with:
        #   cosign-release: main
      - name: Check Version
        run: |
          cosign version
          docker login -u dipugodocker -p "$SUPER_SECRET"

      - name: build all üè≠ Images
        run: |
          chmod +x build.sh
          ./build.sh 0

      - name: push all
        run: |
          docker push $BACKEND_MERGE
          docker push $BACKEND_ROTATE
          docker push $FRONTEND

      - name: sign
        run: |
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $FRONTEND
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_MERGE
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_ROTATE

      - name: verify
        run: |
          echo "Frontend Verify"
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $FRONTEND | jq .
          echo "Backend images Verify"
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_MERGE | jq .
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_ROTATE | jq .



# docker build . --file Dockerfile --tag dipugodocker/pdf-editor:0.$(($(date +%m) + 1))-rc
# docker push dipugodocker/pdf-editor:0.$(($(date +%m) + 1))-rc
