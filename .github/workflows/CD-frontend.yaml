name: '[Stable](Frontend) Stable Docker Signed Image Release'

on:
  schedule:
    # Monthly release at 12'o clock
    - cron: "0 12 1 * *"
  workflow_dispatch:
    inputs:
      version:
        description: Version(Optional)
        default: v1.0.0
        required: false
jobs:
  docker-push-frontend-Sign-using-cosign:
    runs-on: ubuntu-latest
    environment: deploy

    env:
      SUPER_SECRET: ${{ secrets.DOCKER_PASS }}
      FRONTEND: dipugodocker/pdf-editor:0.8-frontend
      # BACKEND_MERGE: dipugodocker/pdf-editor:0.8-backend-merge
      # BACKEND_DATABASE: dipugodocker/pdf-editor:0.8-backend-db
      # BACKEND_ROTATE: dipugodocker/pdf-editor:0.8-backend-rotate

    name: Install Cosign and test presence in path
    steps:
      - uses: actions/checkout@v3


      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        # with:
        #   cosign-release: main
      - name: Check Version
        run: |
          cosign version
          docker login -u dipugodocker -p "$SUPER_SECRET"

      - name: Build üè≠ Frontend Images
        run: |
          echo '[üè≠] Building Prod [Frontend]'
          cd src/frontend && docker build --target prod -t $FRONTEND . --no-cache
        #  echo '[üè≠] Building for Production [Backend-merger]'
        #  cd src/backend/merger && docker build --target prod -t $BACKEND_MERGE . --no-cache
        #  echo '[üè≠] Building for Production [Backend-rotator]'
        #  cd ../rotator && docker build --target prod -t $BACKEND_ROTATE . --no-cache
        #  echo '[üè≠] Building for Production [Backend-database]'
        #  cd ../db && docker build --target db-prod -t $BACKEND_DATABASE . --no-cache

      - name: push Frontend
        run: |
          docker push $FRONTEND
        # docker push $BACKEND_MERGE
        #  docker push $BACKEND_DATABASE
        #  docker push $BACKEND_ROTATE

      - name: sign
        run: |
          echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $FRONTEND
        # echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_MERGE
        # echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_ROTATE
        # echo -n "${{secrets.COSIGNPASSWORD}}" | cosign sign --key cosign.key -a git_sha=$GITHUB_SHA $BACKEND_DATABASE

      - name: verify
        run: |
          cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $FRONTEND | jq .
        #  cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_MERGE | jq .
        #  cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_DATABASE | jq .
        #  cosign verify --key cosign.pub -a git_sha=$GITHUB_SHA $BACKEND_ROTATE | jq .


  helm-artifact-generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: package
        run: |-
          cd deploy/cluster
          helm package pdf-editor-helm
          mv pdf-editor-helm-0.7.0.tgz artifact/
          helm repo index artifact
