# Grafana Loki
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app.kubernetes.io/name: loki
    stack: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      stack: logging
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        stack: logging
    spec:
      containers:
        - name: grafana-loki
          image: grafana/loki:2.6.1
          args: ["-config.file=/etc/loki/local-config.yaml"]
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app.kubernetes.io/service: loki
    stack: logging
spec:
  selector:
    app.kubernetes.io/name: loki
    stack: logging
  type: ClusterIP
  ports:
    - name: web
      targetPort: 3100
      port: 3100
---

# FluentBit
#-----------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    stack: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluent-bit
      stack: logging

  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluent-bit
        stack: logging

    spec:
      containers:
      - name: fluent-bit
        image: grafana/fluent-bit-plugin-loki:latest
        env:
          - name: LOG_PATH
            value: "/var/log/pods/*/*/*.log"
          - name: LOKI_URL
            value: "http://loki:3100/loki/api/v1/push"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/log/
          name: mount-docker-containers
      volumes:
      - name: mount-docker-containers
        hostPath:
          # directory location on host
          path: /var/log/
          # this field is optional
          type: Directory
---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: pdf-editor-ns
#   name: fluent-bit
#   labels:
#     app.kubernetes.io/service: fluent-bit
#     stack: logging
# spec:
#   selector:
#     app.kubernetes.io/name: fluent-bit
#     stack: logging
#   ports:
#   - port: <Port>
#     targetPort: <Target Port>
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
    stack: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      stack: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        stack: logging
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        env:
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Admin"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app.kubernetes.io/service: grafana
    stack: logging
spec:
  selector:
    app.kubernetes.io/name: grafana
    stack: logging
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000

...
